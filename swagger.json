{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Swagger Task Pro",
    "description": "Showing off Task Pro work",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://project-react-node-back.onrender.com" }],
  "tags": [
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Boards",
      "description": "Boards endpoints"
    },
    {
      "name": "Columns",
      "description": "Columns endpoints"
    },
    {
      "name": "Tasks",
      "description": "Tasks endpoints"
    }
  ],
  "paths": {
    "api/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "User registration",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created, registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Conflict (Provided email already exists)",
            "content": {}
          }
        }
      }
    },
    "api/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User login",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized (Email (or Password) is wrong)",
            "content": {}
          }
        }
      }
    },
    "api/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Logout Successful, No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "api/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Current user's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrentUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation, get current user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "api/users/update": {
      "patch": {
        "tags": ["Users"],
        "summary": "User updating",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update user's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation, user updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "api/users/theme": {
      "patch": {
        "tags": ["Users"],
        "summary": "User theme",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update theme's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserThemeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation, theme updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserThemeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Mango"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "mango@email.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Mango"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "mango@email.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          },
          "theme": {
            "type": "string",
            "description": "User's theme",
            "example": "dark"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar",
            "example": ""
          },
          "boards": {
            "type": "array",
            "description": "User's boards",
            "example": []
          },
          "accessToken": {
            "type": "string",
            "description": "User's token",
            "example": null
          },
          "userId": {
            "type": "number",
            "description": "User's id",
            "example": "32143232436545474"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "mango@email.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "User's token",
            "format": "bearer"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Mango"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "mango@email.com"
              },
              "theme": {
                "type": "string",
                "description": "User's theme",
                "enum": ["dark", "violet", "light"],
                "example": "dark"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar",
                "example": ""
              },
              "boards": {
                "type": "array",
                "description": "User's boards",
                "example": []
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
